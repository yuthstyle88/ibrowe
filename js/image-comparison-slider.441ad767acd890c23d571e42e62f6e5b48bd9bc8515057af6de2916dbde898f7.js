(()=>{(()=>{var v=!1,h=document.querySelectorAll(".c-compare__range"),u=2e3,m=50,d=10,P=50,p=90,n=u*.25,l=u*.5,y=u*.25;function M(e){return-(Math.cos(Math.PI*e)-1)/2}function s(e,a,r){s.startTime||(s.startTime=e);let t=e-s.startTime,i=(c,g,b)=>{let q=M(c);return g-q*(g-b)},o;if(t<n)o=i(t/n,m,d);else if(t<n+l)o=i((t-n)/l,d,p);else{let c=Math.min((t-n-l)/y,1);o=i(c,p,P)}a.value=o,r.style.setProperty("--compare-range-value",`${o}%`),t<u&&requestAnimationFrame(c=>s(c,a,r))}var f=new IntersectionObserver(e=>{e.forEach(a=>{if(!a.isIntersecting)return;let r=a.target,t=r.querySelector(".c-compare__range");v||(requestAnimationFrame(i=>s(i,t,r)),v=!0),f.unobserve(r)})});h.forEach(e=>{let a=e.parentNode.parentNode;a.style.setProperty("--compare-range-value",`${m}%`),e.addEventListener("input",r=>{a.style.setProperty("--compare-range-value",`${r.target.value}%`)}),f.observe(a)})})();})();
